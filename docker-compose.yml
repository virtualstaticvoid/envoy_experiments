---
version: '3'

services:

  #
  # entry point to _all_ services
  #

  front-envoy:
    build:
      context: sidecar
    volumes:
      - "./envoy.yaml:/etc/envoy.yaml"
    networks:
      - envoymesh
    ports:
      - "8000:9000"  # gateway
      - "8001:9090"  # admin


  #
  # example application services
  #


  # example HTTP service
  service1:
    build:
      context: httpbin
    networks:
      envoymesh:
        aliases:
          - service1
    environment:
      SERVICE_NAME: "svc1"
    expose:
      - 8080

  service1_sc:
    build:
      context: sidecar
    networks:
      envoymesh:
        aliases:
          - service1
    links:
      - service1
    environment:
      SERVICE_NAME: "svc1-sc"
    ports:
      - "8010:9000"  # service
      - "8011:9090"  # admin

  # example service which consumes redis
  service2:
    build:
      context: httpbin
    networks:
      envoymesh:
        aliases:
          - service2
    environment:
      SERVICE_NAME: "svc2"

  service2_sc:
    build:
      context: sidecar
    networks:
      envoymesh:
        aliases:
          - service2
    links:
      - service2
    environment:
      SERVICE_NAME: "svc2-sc"
    ports:
      - "8020:9000"  # service
      - "8021:9090"  # admin

  # example service which consumes postgres
  service3:
    build:
      context: httpbin
    networks:
      envoymesh:
        aliases:
          - service3
    environment:
      SERVICE_NAME: "svc3"

  service3_sc:
    build:
      context: sidecar
    networks:
      envoymesh:
        aliases:
          - service3
    links:
      - service3
    environment:
      SERVICE_NAME: "svc3-sc"
    ports:
      - "8030:9000"  # service
      - "8031:9090"  # admin

  # example service which consumes rabbitmq
  service4:
    build:
      context: httpbin
    networks:
      envoymesh:
        aliases:
          - service4
    environment:
      SERVICE_NAME: "svc4"

  service4_sc:
    build:
      context: sidecar
    networks:
      envoymesh:
        aliases:
          - service4
    links:
      - service4
    environment:
      SERVICE_NAME: "svc4-sc"
    ports:
      - "8040:9000"  # service
      - "8041:9090"  # admin

  #
  # example base services ~ not exposed via front envoy, but via sidecar proxy
  # i.e. these services are consumed by the application services
  #

  redis:
    build:
      context: redis
    volumes:
      - "redis_data:/data"
      - "./redis/envoy.yaml:/etc/envoy.yaml"
    networks:
      envoymesh:
        aliases:
          - redis

  redis_sc:
    build:
      context: sidecar
    networks:
      envoymesh
    links:
      - service4
    environment:
      SERVICE_NAME: "svc4-sc"
    ports:
      - "8040:9000"  # service
      - "8041:9090"  # admin


  postgres:
    build:
      context: postgres
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
      - "./postgres/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql"
      - "./postgres/envoy.yaml:/etc/envoy.yaml"
    networks:
      envoymesh:
        aliases:
          - postgres
    environment:
      SERVICE_NAME: "postgres"
    expose:
      - 8080
    env_file:
      - "./postgres/.env"

  rabbitmq:
    build:
      context: rabbitmq
    volumes:
      - "rabbitmq_data:/var/lib/rabbitmq"
      - "./rabbitmq/envoy.yaml:/etc/envoy.yaml"
    networks:
      envoymesh:
        aliases:
          - rabbitmq
    environment:
      SERVICE_NAME: "rabbitmq"
    expose:
      - 8080
    ports:
      - "9009:8080"
      - "9010:8081"   # admin
      - "9011:8082"   # rabbimq admin
    env_file:
      - "./rabbitmq/.env"

networks:
  envoymesh: {}

volumes:
  redis_data: {}
  postgres_data: {}
  rabbitmq_data: {}
